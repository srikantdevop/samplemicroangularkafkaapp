# This configuration is intended for development purpose, it's **your** responsibility to harden it for production
version: '3.8'
services:
  samplemicroangularkafkaapp-app:
    image: samplemicroangularkafkaapp
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://samplemicroangularkafkaapp-mssql:1433;database=samplemicroangularkafkaapp
      - SPRING_LIQUIBASE_URL=jdbc:sqlserver://samplemicroangularkafkaapp-mssql:1433;database=samplemicroangularkafkaapp
      - JHIPSTER_CACHE_MEMCACHED_SERVERS=samplemicroangularkafkaapp-memcached:11211
      - JHIPSTER_SLEEP=60 # gives time for mssql server to start
      - SPRING_ELASTICSEARCH_URIS=http://samplemicroangularkafkaapp-elasticsearch:9200
      - KAFKA_BOOTSTRAPSERVERS=kafka:9092
  samplemicroangularkafkaapp-mssql:
    image: mcr.microsoft.com/mssql/server:2019-CU15-ubuntu-20.04
    # volumes are not supported on macOS
    # volumes:
    #   - ~/volumes/jhipster/tempdb/mssql/:/var/opt/mssql/data/
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - SA_PASSWORD=yourStrong(!)Password
      - MSSQL_DATABASE=samplemicroangularkafkaapp
      - MSSQL_SLEEP=60
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 127.0.0.1:1433:1433
    command: /bin/bash -c '/opt/mssql/bin/sqlservr & echo "wait $$MSSQL_SLEEP sec for DB to start "; sleep $$MSSQL_SLEEP; /opt/mssql-tools/bin/sqlcmd -U sa -P $$SA_PASSWORD -d tempdb -q "EXIT(CREATE DATABASE $$MSSQL_DATABASE)"; wait;'
  samplemicroangularkafkaapp-memcached:
    image: memcached:1.6.14-alpine
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 127.0.0.1:11211:11211
  samplemicroangularkafkaapp-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    # volumes:
    #   - ~/volumes/jhipster/samplemicroangularkafkaapp/elasticsearch/:/usr/share/elasticsearch/data/
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
    environment:
      - 'ES_JAVA_OPTS=-Xms1024m -Xmx1024m'
      - 'discovery.type=single-node'
  kafka:
    image: confluentinc/cp-kafka:5.5.7
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 127.0.0.1:9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.7
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  consul:
    image: consul:1.11.3
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 127.0.0.1:8300:8300
      - 127.0.0.1:8500:8500
      - 127.0.0.1:8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO

  consul-config-loader:
    image: jhipster/consul-config-loader:v0.4.1
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
      # Uncomment to load configuration into Consul from a Git repository
      # as configured in central-server-config/git2consul.json
      # Also set SPRING_CLOUD_CONSUL_CONFIG_FORMAT=files on your apps
      # - CONFIG_MODE=git
